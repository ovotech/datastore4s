defaults: &defaults
  working_directory: ~/datastore4s
  docker:
    - image: olib963/sbt-ci-image:sbt-1-1-6

version: 2
jobs:

  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Compile
          command: sbt ";compile;test:compile;it:compile"
      - save_cache:
          paths:
            - ~/.m2
            - ~/.ivy2
          key: v2-dependencies-{{ checksum "build.sbt" }}
      - persist_to_workspace:
          root: .
          paths:
            - target
            - build.sbt
            - project

  unit-test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Unit Test
          command: sbt test

  format-check:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Scalafmt Check
          command: sbt ";scalafmtCheck;scalafmtSbtCheck"

  integration-test:
    <<: *defaults
    docker:
      - image: olib963/sbt-ci-image:sbt-1-1-6
      - image: xaviiic/alpine-cloud-datastore-emulator:1.2.1
        entrypoint: ["gcloud", "beta", "emulators", "datastore", "start", "--project=datastore4s-project", "--no-store-on-disk", "--host-port=localhost:8380"]
    environment:
      - DATASTORE_PROJECT_ID: datastore4s
      - DATASTORE_HOST: http://localhost:8380
      - DATASTORE_EMULATOR_HOST: http://localhost:8380
      - DATASTORE_EMULATOR_HOST_PATH: localhost:8380/datastore
      - DATASTORE_DATASET: datastore4s
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Integration Test
          command: sbt it:test

  publish:
    <<: *defaults
    steps:
      - add_ssh_keys # TODO issue where a read only key is needed to access the config.yml then read/write is used to push tags
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Extract Bintray Creds
          command: build/bintray.sh
      - run:
          name: Git Setup # TODO why do we need the config?
          command: git config user.email "deploy@circleci.com" && git config user.name "CircleCI"
      - run:
          name: Tag Release
          command: build/tag.sh
      - run:
          name: Publish
          command: build/publish.sh


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - unit-test:
          requires:
            - build
      - integration-test:
          requires:
            - build
      - format-check
      - hold:
          type: approval
          requires:
            - unit-test
            - integration-test
            - format-check
          filters:
            branches:
              only:
                - master
      - publish:
          requires:
            - hold
